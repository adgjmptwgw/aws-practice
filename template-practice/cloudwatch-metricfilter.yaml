AWSTemplateFormatVersion: "2010-09-09"
Transform: Count
# ------------------------------------------------------------#
# README
# ------------------------------------------------------------#

# ------------------------------------------------------------#
# Template Description
# ------------------------------------------------------------#
Description: ""
Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "Environment Variable Configs"
        Parameters:
          - EnvConfig
      - Label:
          default: "Project prefix"
        Parameters:
          - PJPrefix

# ------------------------------------------------------------#
# Input Parameters
# ------------------------------------------------------------#
Parameters:
  # NOTE: 環境変数を変更するだけで、別々の環境のリソースを作成できます。
  EnvConfig:
    Type: String
    AllowedValues:
      - dev
      - stg
      - prod
    Default: "dev"
  PJPrefix:
    Type: String
    Default: "pjPrefix"

Resources:
  # ------------------------------------------------------------#
  # ECS アプリ内のロググループから "error" の文字列を検索
  # ------------------------------------------------------------#
  ECSAppLogErrorFilter:
    Type: "AWS::Logs::MetricFilter"
    Properties:
      FilterPattern: '"error"'
      LogGroupName: !Sub "/ecs/${EnvConfig}-${PJPrefix}-task-definition-test/app-log"
      MetricTransformations:
        - MetricName: "Error"
          MetricNamespace: "ECS/test-app"
          MetricValue: "1"
          DefaultValue: "0"

# 【様々なフィルターパターンの書き方】
# オブジェクトのキーの名前が "errorCode" のもので、値が "UnauthorizedOperation" もしくは "AccessDenied" のものがヒット
# '{($.errorCode="*UnauthorizedOperation") || ($.errorCode="AccessDenied*")}''

# オブジェクトのキーの名前が "objectPropatyOfNumber" のもので、値が10以上かつ20以下のものがヒット
# '{($.objectPropatyOfNumber>=10) && ($.objectPropatyOfNumber<=20)}'

# "Error" と "error" の文字列のいずれかがあればヒット
# '[w1=%Error% || w1=%error%]'
