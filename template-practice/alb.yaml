AWSTemplateFormatVersion: "2010-09-09"
# ------------------------------------------------------------#
# README
# ------------------------------------------------------------#
# - ALB のリスナールール名はCloudFormationのプロパティが存在しない為、設定できません。
# - マネージドコンソール上で、ACMの証明書のARNを書き換えてテンプレートを作成してください。ACMCertificateArn という変数です。

# ------------------------------------------------------------#
# Template Description
# ------------------------------------------------------------#
Description: ""
Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "Environment Variable configs"
        Parameters:
          - EnvConfig
      - Label:
          default: "Project prefix"
        Parameters:
          - PJPrefix
      - Label:
          default: "Configuration for ALB"
        Parameters:
          - LoadBalancerType
          - IpAddressType
      - Label:
          default: "Configuration for Listener"
        Parameters:
          - ACMCertificateArn
          - ListenerPortBlue
          - ListenerPortGreen
          - ListenerProtocol
          - SslPolicyType
      - Label:
          default: "Configuration for Listener Rule"
        Parameters:
          - HttpHeaderName
          - HttpHeaderValue
          - ActionType
      - Label:
          default: "Configuration for Target Group"
        Parameters:
          - HealthCheckPath
          - TargetPort
          - TargetProtocol
          - TargetType

    ParameterLabels:
      LoadBalancerType:
        default: "ALB types"
      IpAddressType:
        default: "IPv4 or dualstack"
      ACMCertificateArn:
        default: "Enter the ACM certificate ARN for each environment."
      ListenerPortBlue:
        default: "Port on the main listener side"
      ListenerPortGreen:
        default: "Port on the sub-listener side"
      ListenerProtocol:
        default: "HTTP or HTTPS protocol on the listener side"
      SslPolicyType:
        default: "Security policy type"
      HttpHeaderName:
        default: "Key name to be used for rule conditions"
      HttpHeaderValue:
        default: "Value name to be used for rule conditions"
      ActionType:
        default: "Type of action if condition is met"
      HealthCheckPath:
        default: "URIs used for health checks"
      TargetPort:
        default: "Host port number to connect to app container"
      TargetProtocol:
        default: "Target HTTP or HTTPS protocol"
      TargetType:
        default: "Targets for sending traffic with ALB"

# ------------------------------------------------------------#
# Input Parameters
# ------------------------------------------------------------#
Parameters:
  # NOTE: 環境変数を変更するだけで、別々の環境のリソースを作成できます。
  EnvConfig:
    Type: String
    AllowedValues:
      - dev
      - stg
      - prod
    Default: "dev"
  PJPrefix:
    Type: String
    Default: "pjPrefix"
  # ALB用
  LoadBalancerType:
    Type: String
    Default: "application"
    AllowedValues:
      - application
      - network
      - gateway
  IpAddressType:
    Type: String
    Default: "ipv4"
    AllowedValues:
      - ipv4
      - dualstack

  # リスナー用
  ACMCertificateArn:
    Type: String
    # NOTE: ACMのARNを入力
    Default: ""
  ListenerPortBlue:
    Type: Number
    Default: "443"
  ListenerPortGreen:
    Type: Number
    Default: "8443"
  ListenerProtocol:
    Type: String
    Default: "HTTPS"
    AllowedValues:
      - HTTP
      - HTTPS
  SslPolicyType:
    Type: String
    Default: "ELBSecurityPolicy-TLS13-1-2-2021-06"

  # リスナールール用
  HttpHeaderName:
    Type: String
    Default: "X-Custom-Header"
  HttpHeaderValue:
    Type: String
    # NOTE: 推測されにくい文字列を設定する
    Default: "xxxxxxxxxxxxxxxxxx"
  ActionType:
    Type: String
    Default: "forward"
    AllowedValues:
      - forward
      - fixed-response
      - redirect

  # ターゲットグループ用
  HealthCheckPath:
    Type: String
    # NOTE: ヘルスチェックAPIのパス
    Default: ""
  TargetPort:
    Type: Number
    Default: 3000
  TargetProtocol:
    Type: String
    Default: "HTTP"
    AllowedValues:
      - HTTP
      - HTTPS
  TargetType:
    Type: String
    Default: "ip"
    AllowedValues:
      - instance
      - ip
      - lambda
      - alb

Resources:
  # ------------------------------------------------------------#
  # ALB
  # ------------------------------------------------------------#
  ALB:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Name: !Sub "${EnvConfig}-${PJPrefix}-alb"
      Scheme: "internet-facing"
      Type: !Ref LoadBalancerType
      Subnets:
        - {
            "Fn::ImportValue": !Sub "${EnvConfig}-${PJPrefix}-subnet-0-a-public",
          }
        - {
            "Fn::ImportValue": !Sub "${EnvConfig}-${PJPrefix}-subnet-2-c-public",
          }
      SecurityGroups:
        - { "Fn::ImportValue": !Sub "${EnvConfig}-${PJPrefix}-alb-sg" }
      IpAddressType: !Ref IpAddressType
      LoadBalancerAttributes: 
        - Key: "deletion_protection.enabled"
          Value: true
        # NOTE: アクセスログが必要であればコメントアウトを解除する
        # - 
        #   Key: "access_logs.s3.enabled"
        #   Value: true
        # - 
        #   Key: "access_logs.s3.bucket"
        #   # NOTE: S3のバケット名を記載する　
        #   Value: !Sub "${EnvConfig}-${PJPrefix}-bucket-name"

  # ------------------------------------------------------------#
  # Listener
  # ------------------------------------------------------------#
  # メイン（Blue）リスナー
  ALBListenerBlue:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      LoadBalancerArn: !Ref ALB
      Port: !Ref ListenerPortBlue
      Protocol: !Ref ListenerProtocol
      SslPolicy: !Ref SslPolicyType
      Certificates:
        - CertificateArn: !Ref ACMCertificateArn
      DefaultActions:
        - FixedResponseConfig:
            MessageBody: "Access denied"
            StatusCode: "403"
            ContentType: "text/plain"
          Order: 1
          Type: "fixed-response"

  # サブ（Green）リスナー
  ALBListenerGreen:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      LoadBalancerArn: !Ref ALB
      Port: !Ref ListenerPortGreen
      Protocol: !Ref ListenerProtocol
      SslPolicy: !Ref SslPolicyType
      Certificates:
        - CertificateArn: !Ref ACMCertificateArn
      DefaultActions:
        - FixedResponseConfig:
            MessageBody: "Access denied"
            StatusCode: "403"
            ContentType: "text/plain"
          Order: 1
          Type: "fixed-response"

  # ------------------------------------------------------------#
  # Listener Rule
  # ------------------------------------------------------------#
  # リスナールール（Blue）
  ListenerRuleBlue:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Priority: 1
      ListenerArn: !Ref ALBListenerBlue
      Conditions:
        - Field: "http-header"
          HttpHeaderConfig:
            HttpHeaderName: !Ref HttpHeaderName
            Values:
              - !Ref HttpHeaderValue
        - Field: "path-pattern"
          Values:
            - "/test-path/*"
      Actions:
        - Type: !Ref ActionType
          TargetGroupArn: !Ref ALBTargetGroupBlue
          Order: 1
          ForwardConfig:
            TargetGroups:
              - TargetGroupArn: !Ref ALBTargetGroupBlue
                Weight: 1
            TargetGroupStickinessConfig:
              Enabled: false
              DurationSeconds: 3600

  # リスナールール（Green）
  ListenerRuleGreen:
    Type: "AWS::ElasticLoadBalancingV2::ListenerRule"
    Properties:
      Priority: 1
      ListenerArn: !Ref ElasticLoadBalancingV2ListenerGreen
      Conditions:
        - Field: "http-header"
          HttpHeaderConfig:
            HttpHeaderName: !Ref HttpHeaderName
            Values:
              - !Ref HttpHeaderValue
        - Field: "path-pattern"
          Values:
            - "/test-path/*"
      Actions:
        - Type: !Ref ActionType
          TargetGroupArn: !Ref ALBTargetGroupGreen
          Order: 1
          ForwardConfig:
            TargetGroups:
              - TargetGroupArn: !Ref ALBTargetGroupGreen
                Weight: 1
            TargetGroupStickinessConfig:
              Enabled: false
              DurationSeconds: 3600

  # ------------------------------------------------------------#
  # Target Group
  # ------------------------------------------------------------#
  # ターゲットグループ（Blue）
  ALBTargetGroupBlue:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      TargetType: !Ref TargetType
      Port: !Ref TargetPort
      Protocol: !Ref TargetProtocol
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: !Sub "/test-path/${HealthCheckPath}"
      HealthCheckPort: "traffic-port"
      HealthCheckProtocol: !Ref TargetProtocol
      HealthCheckTimeoutSeconds: 5
      UnhealthyThresholdCount: 2
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: 200
      VpcId: { "Fn::ImportValue": !Sub "${EnvConfig}-${PJPrefix}-vpc" }
      Name: !Sub "${EnvConfig}-${PJPrefix}-tg-test-blue"
      HealthCheckEnabled: true

  # ターゲットグループ（Green）
  ALBTargetGroupGreen:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      TargetType: !Ref TargetType
      Port: !Ref TargetPort
      Protocol: !Ref TargetProtocol
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: !Sub "/test-path/${HealthCheckPath}"
      HealthCheckPort: "traffic-port"
      HealthCheckProtocol: !Ref TargetProtocol
      HealthCheckTimeoutSeconds: 5
      UnhealthyThresholdCount: 2
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: 200
      VpcId: { "Fn::ImportValue": !Sub "${EnvConfig}-${PJPrefix}-vpc" }
      Name: !Sub "${EnvConfig}-${PJPrefix}-tg-test-green"
      HealthCheckEnabled: true

# ------------------------------------------------------------#
# Output Parameters
# ------------------------------------------------------------#
Outputs:
  # ALB
  ALB:
    Value: !Ref ALB
    Export:
      Name: !Sub "${EnvConfig}-${PJPrefix}-alb"

  # ALB DNS
  ALBDNS:
    Description: ALB endpoint DNS
    Value: !GetAtt ALB.DNSName
    Export:
      Name: !Sub "${EnvConfig}-${PJPrefix}-alb-dns"

  # リスナー（Blue）
  ALBListenerBlue:
    Value: !Ref ALBListenerBlue
    Export:
      Name: !Sub "${EnvConfig}-${PJPrefix}-listener-blue"

  # リスナー（Green）
  ALBListenerGreen:
    Value: !Ref ALBListenerGreen
    Export:
      Name: !Sub "${EnvConfig}-${PJPrefix}-listener-green"

  # ターゲットグループ（Blue）
  ALBTargetGroupBlue:
    Value: !Ref ALBTargetGroupBlue
    Export:
      Name: !Sub "${EnvConfig}-${PJPrefix}-target-group-blue"

  # ターゲットグループ（Green）
  ALBTargetGroupGreen:
    Value: !Ref ALBTargetGroupGreen
    Export:
      Name: !Sub "${EnvConfig}-${PJPrefix}-target-group-green"

