AWSTemplateFormatVersion: "2010-09-09"
# ------------------------------------------------------------#
# Template Description
# ------------------------------------------------------------#
Description: ""
Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "Environment Variable Configs"
        Parameters:
          - EnvConfig
      - Label:
          default: "Project prefix"
        Parameters:
          - PJPrefix
      - Label:
          default: "ECS Service Auto scaling configuration"
        Parameters:
          - ScalingPolicyType
          - CPUUtilizationThreshold
          - CPUUtilizationScaleInTime
          - CPUUtilizationScaleOutTime
          - MemoryUtilizationThreshold
          - MemoryUtilizationScaleInTime
          - MemoryUtilizationScaleOutTime

    ParameterLabels:
      ScalingPolicyType:
        default: "Scaling policy"
      CPUUtilizationThreshold:
        default: "Threshold for scaling out by CPU utilization"
      CPUUtilizationScaleInTime:
        default: "Time to scale in after scale-out based on CPU utilization"
      CPUUtilizationScaleOutTime:
        default: "Time to scale-out after scale-in based on CPU utilization"
      MemoryUtilizationThreshold:
        default: "Threshold for scaling out by Memory utilization"
      MemoryUtilizationScaleInTime:
        default: "Time to scale in after scale-out based on Memory utilization"
      MemoryUtilizationScaleOutTime:
        default: "Time to scale-out after scale-in based on Memory utilization"

# ------------------------------------------------------------#
# Input Parameters
# ------------------------------------------------------------#
Parameters:
  # NOTE: 環境変数を変更するだけで、別々の環境のリソースを作成できます。
  EnvConfig:
    Type: String
    AllowedValues:
      - dev
      - stg
      - prod
    Default: "dev"
  PJPrefix:
    Type: String
    Default: "pjPrefix"
  ScalingPolicyType:
    Type: String
    Default: TargetTrackingScaling
    AllowedValues:
      - TargetTrackingScaling
      - StepScaling
  CPUUtilizationThreshold:
    Type: Number
    Default: 80
  CPUUtilizationScaleInTime:
    Type: Number
    Default: 300
  CPUUtilizationScaleOutTime:
    Type: Number
    Default: 60
  MemoryUtilizationThreshold:
    Type: Number
    Default: 80
  MemoryUtilizationScaleInTime:
    Type: Number
    Default: 300
  MemoryUtilizationScaleOutTime:
    Type: Number
    Default: 60

# ------------------------------------------------------------#
# Conditions
# ------------------------------------------------------------#
Conditions:
  IsDev: !Or
    - !Equals [!Ref EnvConfig, "dev"]


Resources:
  # ------------------------------------------------------------#
  # Scaling Target
  # ------------------------------------------------------------#
  # オートスケーリングポリシー
  AutoScalingTargetService:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MinCapacity: !If [IsDev, 1, 2]
      MaxCapacity: !If [IsDev, 2, 3]
      ResourceId: !Sub
        - service/${ECSClusterName}/${ECSServiceName}
        - ECSClusterName:
            {
              "Fn::ImportValue": !Sub "${EnvConfig}-${PJPrefix}-ecs-cluster-name",
            }
          ECSServiceName:
            {
              "Fn::ImportValue": !Sub "${EnvConfig}-${PJPrefix}-ecs-service-name",
            }
      RoleARN: !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
      ScalableDimension: "ecs:service:DesiredCount"
      ServiceNamespace: "ecs"

  # ------------------------------------------------------------#
  # Scalable Policies
  # ------------------------------------------------------------#
  # CPU使用量監視 - オートスケーリングポリシー
  CPUAutoScalingPolicyService:
    Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
    Properties:
      PolicyName: "ecs-service-avarage-cpu-utilization"
      PolicyType: !Ref ScalingPolicyType
      ScalingTargetId: !Ref AutoScalingTargetService
      ResourceId: !Sub
        - service/${ECSClusterName}/${ECSServiceName}
        - ECSClusterName:
            {
              "Fn::ImportValue": !Sub "${EnvConfig}-${PJPrefix}-ecs-cluster-name",
            }
          ECSServiceName:
            {
              "Fn::ImportValue": !Sub "${EnvConfig}-${PJPrefix}-ecs-service-test-name",
            }
      ScalableDimension: "ecs:service:DesiredCount"
      ServiceNamespace: "ecs"
      TargetTrackingScalingPolicyConfiguration:
        DisableScaleIn: false
        PredefinedMetricSpecification:
          PredefinedMetricType: "ECSServiceAverageCPUUtilization"
        ScaleInCooldown: !Ref CPUUtilizationScaleInTime
        ScaleOutCooldown: !Ref CPUUtilizationScaleOutTime
        TargetValue: !Ref CPUUtilizationThreshold

  # Memory使用量監視 - オートスケーリングポリシー
  MemoryAutoScalingPolicyService:
    Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
    Properties:
      PolicyName: "ecs-service-avarage-memory-utilization"
      PolicyType: !Ref ScalingPolicyType
      ScalingTargetId: !Ref AutoScalingTargetService
      ResourceId: !Sub
        - service/${ECSClusterName}/${ECSServiceName}
        - ECSClusterName:
            {
              "Fn::ImportValue": !Sub "${EnvConfig}-${PJPrefix}-ecs-cluster-name",
            }
          ECSServiceName:
            {
              "Fn::ImportValue": !Sub "${EnvConfig}-${PJPrefix}-ecs-service-test-name",
            }
      ScalableDimension: "ecs:service:DesiredCount"
      ServiceNamespace: "ecs"
      TargetTrackingScalingPolicyConfiguration:
        DisableScaleIn: false
        PredefinedMetricSpecification:
          PredefinedMetricType: "ECSServiceAverageMemoryUtilization"
        ScaleInCooldown: !Ref MemoryUtilizationScaleInTime
        ScaleOutCooldown: !Ref MemoryUtilizationScaleOutTime
        TargetValue: !Ref MemoryUtilizationThreshold
