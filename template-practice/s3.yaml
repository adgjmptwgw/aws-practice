AWSTemplateFormatVersion: "2010-09-09"
Transform: Count
# ------------------------------------------------------------#
# README
# ------------------------------------------------------------#
# - イベント通知にてSNSイベントを実行する場合、S3からの通知を許可するよう、Amazon SNSへポリシーを追加する。


# ------------------------------------------------------------#
# Template Description
# ------------------------------------------------------------#
Description: ""
Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "Environment Variable Configs"
        Parameters:
          - EnvConfig
      - Label:
          default: "Project prefix"
        Parameters:
          - PJPrefix

# ------------------------------------------------------------#
# Input Parameters
# ------------------------------------------------------------#
Parameters:
  # NOTE: 環境変数を変更するだけで、別々の環境のリソースを作成できます。
  EnvConfig:
    Type: String
    AllowedValues:
      - dev
      - stg
      - prod
    Default: "dev"
  PJPrefix:
    Type: String
    Default: "pjPrefix"
  # NOTE: ライフサイクルにてオブジェクトを何日間保持するか
  ExpirationInDaysForArchive:
    Type: Number
    Default: 365
  # 共通設定
  NewerNoncurrentVersions:
    Type: Number
    Default: 2
  NoncurrentDays:
    Type: Number
    Default: 1

# ------------------------------------------------------------#
# Conditions
# ------------------------------------------------------------#
Conditions:
  IsDev: !Or
    - !Equals [!Ref EnvConfig, "dev"]

Resources:
  # ------------------------------------------------------------#
  # Bucket
  # ------------------------------------------------------------#
  CommonBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "${EnvConfig}-${PJPrefix}-bucket"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"
            BucketKeyEnabled: true 
      LoggingConfiguration:
        DestinationBucketName: !Ref ServerAccessLogsBucket
        LogFilePrefix: ""
        TargetObjectKeyFormat:
          PartitionedPrefix:
            PartitionDateSource: "EventTime" 
      NotificationConfiguration:
        TopicConfigurations:
          - Event: "s3:Replication:OperationFailedReplication"
            Topic: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${EnvConfig}-${PJPrefix}-test-sns"
      ReplicationConfiguration:
        Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/${EnvConfig}-${PJPrefix}-s3-replication-bucket-role"
        Rules:
          - Id: !Sub "${EnvConfig}-${PJPrefix}-bucket-replica"
            Status: "Enabled"
            Destination:
              Bucket: !Sub "arn:aws:s3:::${EnvConfig}-${PJPrefix}-bucket-backup"
            DeleteMarkerReplication:
              Status: "Disabled"
            Filter:
              Prefix: ""
            Priority: 0 
      LifecycleConfiguration:
        Rules:
          - Id: !Sub "${EnvConfig}-${PJPrefix}-bucket-life-cycle"
            Status: "Enabled"
            NoncurrentVersionExpiration:
              NewerNoncurrentVersions: !Ref NewerNoncurrentVersions
              NoncurrentDays: !Ref NoncurrentDays
      VersioningConfiguration:
        Status: !If [IsDev, "Suspended", "Enabled"]
      OwnershipControls:
        Rules:
          - ObjectOwnership: "BucketOwnerEnforced"
      PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true

  # バケットポリシー
  CommonBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Sub "${EnvConfig}-${PJPrefix}-bucket"
      PolicyDocument:
        Version: "2008-10-17"
        Statement:
          -
            Sid: "AllowSSLRequestsOnly"
            Effect: "Deny"
            Principal: "*"
            Action: "s3:*"
            Resource: 
              - !Sub "arn:aws:s3:::${EnvConfig}-${PJPrefix}-bucket"
              - !Sub "arn:aws:s3:::${EnvConfig}-${PJPrefix}-bucket/*"
            Condition: 
                Bool: 
                    "aws:SecureTransport": "false"


  # S3サーバーアクセスログ用のバケット
  ServerAccessLogsBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "${EnvConfig}-${PJPrefix}-s3-server-access-logs"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"
            BucketKeyEnabled: true 
      LoggingConfiguration:
        DestinationBucketName: !Sub "${EnvConfig}-${PJPrefix}-s3-server-access-logs"
        LogFilePrefix: ""
        TargetObjectKeyFormat:
          PartitionedPrefix:
            PartitionDateSource: "EventTime"
      NotificationConfiguration:
        TopicConfigurations:
          - Event: "s3:Replication:OperationFailedReplication"
            Topic: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${EnvConfig}-${PJPrefix}-system-monitoring-sns"
      ReplicationConfiguration:
        Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/${EnvConfig}-${PJPrefix}-s3-replication-bucket-role"
        Rules:
          - Id: !Sub "${EnvConfig}-${PJPrefix}-s3-server-access-logs-replica"
            Status: "Enabled"
            Destination:
              Bucket: !Sub "arn:aws:s3:::${EnvConfig}-${PJPrefix}-s3-server-access-logs-backup"
            DeleteMarkerReplication:
              Status: "Disabled"
            Filter:
              Prefix: ""
            Priority: 0 
      LifecycleConfiguration:
        Rules:
          - Id: !Sub "${EnvConfig}-${PJPrefix}-s3-server-access-logs-life-cycle"
            Status: "Enabled"
            ExpirationInDays: !Ref ExpirationInDaysForArchive
            NoncurrentVersionExpiration:
              NewerNoncurrentVersions: !Ref NewerNoncurrentVersions
              NoncurrentDays: !Ref NoncurrentDays
      VersioningConfiguration:
        Status: !If [IsDev, "Suspended", "Enabled"]
      OwnershipControls:
        Rules:
          - ObjectOwnership: "BucketOwnerEnforced"
      PublicAccessBlockConfiguration: 
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true

  # S3サーバーアクセスログ用のバケットポリシー
  ServerAccessLogsBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref ServerAccessLogsBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Sid: "AllowSSLRequestsOnly"
            Effect: "Deny"
            Principal: "*"
            Action: "s3:*"
            Resource: 
              - !Sub "arn:aws:s3:::${ServerAccessLogsBucket}"
              - !Sub "arn:aws:s3:::${ServerAccessLogsBucket}/*"
            Condition: 
                Bool: 
                    "aws:SecureTransport": "false"
